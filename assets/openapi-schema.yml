openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/partnumbers/:
    get:
      operationId: listPartnumbers
      description: API endpoint that allows partnumbers to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Partnumber'
            text/html:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Partnumber'
          description: ''
      tags:
      - api
    post:
      operationId: createPartnumber
      description: API endpoint that allows partnumbers to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partnumber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Partnumber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Partnumber'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partnumber'
            text/html:
              schema:
                $ref: '#/components/schemas/Partnumber'
          description: ''
      tags:
      - api
  /api/partnumbers/print_list/:
    get:
      operationId: printListPartnumber
      description: API endpoint that allows partnumbers to be viewed or edited.
      parameters: []
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Partnumber'
          description: ''
      tags:
      - api
  /api/partnumbers/{id}/:
    get:
      operationId: retrievePartnumber
      description: API endpoint that allows partnumbers to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this partnumber.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partnumber'
            text/html:
              schema:
                $ref: '#/components/schemas/Partnumber'
          description: ''
      tags:
      - api
    put:
      operationId: updatePartnumber
      description: API endpoint that allows partnumbers to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this partnumber.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partnumber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Partnumber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Partnumber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partnumber'
            text/html:
              schema:
                $ref: '#/components/schemas/Partnumber'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePartnumber
      description: API endpoint that allows partnumbers to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this partnumber.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partnumber'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Partnumber'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Partnumber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partnumber'
            text/html:
              schema:
                $ref: '#/components/schemas/Partnumber'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPartnumber
      description: API endpoint that allows partnumbers to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this partnumber.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/pickings/:
    get:
      operationId: listPickings
      description: CRUD API endpoint for pickings
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Picking'
            text/html:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Picking'
          description: ''
      tags:
      - api
    post:
      operationId: createPicking
      description: CRUD API endpoint for pickings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Picking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Picking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Picking'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Picking'
            text/html:
              schema:
                $ref: '#/components/schemas/Picking'
          description: ''
      tags:
      - api
  /api/pickings/{id}/:
    get:
      operationId: retrievePicking
      description: CRUD API endpoint for pickings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this picking.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Picking'
            text/html:
              schema:
                $ref: '#/components/schemas/Picking'
          description: ''
      tags:
      - api
    put:
      operationId: updatePicking
      description: CRUD API endpoint for pickings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this picking.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Picking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Picking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Picking'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Picking'
            text/html:
              schema:
                $ref: '#/components/schemas/Picking'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePicking
      description: CRUD API endpoint for pickings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this picking.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Picking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Picking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Picking'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Picking'
            text/html:
              schema:
                $ref: '#/components/schemas/Picking'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPicking
      description: CRUD API endpoint for pickings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this picking.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/pickings/{id}/partnumber/:
    get:
      operationId: partnumberPicking
      description: CRUD API endpoint for pickings
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this picking.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Picking'
          description: ''
      tags:
      - api
  /api/orders/:
    get:
      operationId: listOrders
      description: API endpoint that allows orders to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
            text/html:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    post:
      operationId: createOrder
      description: API endpoint that allows orders to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/html:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
  /api/orders/requested/:
    get:
      operationId: requestedOrder
      description: API endpoint that allows orders to be viewed or edited.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/html:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
  /api/orders/{id}/:
    get:
      operationId: retrieveOrder
      description: API endpoint that allows orders to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/html:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrder
      description: API endpoint that allows orders to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/html:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrder
      description: API endpoint that allows orders to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/html:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrder
      description: API endpoint that allows orders to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/orders/{id}/bypartnumber/:
    get:
      operationId: bypartnumberOrder
      description: API endpoint that allows orders to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/html:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
  /inspections/:
    get:
      operationId: listLots
      description: API endpoint that allows to retrieve a list of lots
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lot'
            text/html:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lot'
          description: ''
      tags:
      - inspections
components:
  schemas:
    Partnumber:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        sku:
          type: string
          maxLength: 60
        description:
          type: string
        get_unit_display:
          type: string
          readOnly: true
        unit:
          enum:
          - pcs
          - gr
          - mt
          - mm
          - lt
          type: string
        pmu:
          type: number
          nullable: true
        db_nr:
          type: integer
          nullable: true
        category:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
      required:
      - sku
      - category
      - modified
    Picking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        partnumber:
          type: string
        partnumber_display:
          type: string
          readOnly: true
        lot:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            lot_display:
              type: string
              readOnly: true
            supplier_type_display:
              type: string
            lot_date:
              type: string
              format: date
            modified:
              type: string
              format: date-time
            created:
              type: string
              format: date-time
              readOnly: true
            lot_number:
              type: integer
            supplier_type:
              enum:
              - fn
              - tz
              - sclpun
              - int_pr
              - t
              - r
              - QPS
              type: string
          required:
          - supplier_type_display
          - lot_date
          - modified
          - lot_number
        picking_date:
          type: string
          format: date
        picking_operator:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            username:
              type: string
              description: Obbligatorio. 150 caratteri o meno.Solo lettere, cifre
                e @/./+/-/_
              pattern: ^[\w.@+-]+\z
              maxLength: 150
            first_name:
              type: string
              maxLength: 150
            last_name:
              type: string
              maxLength: 150
          required:
          - username
        picking_date_display:
          type: string
          format: date
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
      required:
      - partnumber
      - lot
      - picking_date
      - picking_operator
      - picking_date_display
      - modified
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        coc:
          type: string
          maxLength: 60
        orderdate:
          type: string
          format: date
        shipdate:
          type: string
          format: date
        customer:
          type: integer
        customer_display:
          type: string
          readOnly: true
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              coc_view:
                type: string
                readOnly: true
              shipdate:
                type: string
                readOnly: true
              partnumber_view:
                type: string
                readOnly: true
              status_display:
                type: string
                readOnly: true
              created:
                type: string
                format: date-time
                readOnly: true
              modified:
                type: string
                format: date-time
                readOnly: true
              status:
                enum:
                - planned
                - released
                - closed
                - deleted
                type: string
              status_changed:
                type: string
                format: date-time
                readOnly: true
              quantity:
                type: integer
              partnumber:
                type: string
              coc:
                type: integer
            required:
            - quantity
            - partnumber
            - coc
      required:
      - coc
      - orderdate
      - shipdate
      - customer
      - items
    Lot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lot_display:
          type: string
          readOnly: true
        supplier_type_display:
          type: string
        lot_date:
          type: string
          format: date
        modified:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
          readOnly: true
        lot_number:
          type: integer
        supplier_type:
          enum:
          - fn
          - tz
          - sclpun
          - int_pr
          - t
          - r
          - QPS
          type: string
      required:
      - supplier_type_display
      - lot_date
      - modified
      - lot_number
